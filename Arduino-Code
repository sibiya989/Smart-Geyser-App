#include <ESP8266WiFi.h>
#include <FirebaseArduino.h>
#include <OneWire.h>
#include <DallasTemperature.h>

//int greenLedPin = D1;
int yellowLedPin = D2;
//int redLedPin = D3;

int currentPin = A0;              
double kilos = 0;
int peakPower = 0;
//price per kilo watts in cents
float price = 1.068;
float price2;


int temp_sensor = D5;

float temperature = 0;
float userTemperature = 0;
int lowerLimit = 30;
int higherLimit = 85;
                     
OneWire oneWirePin(temp_sensor);
DallasTemperature sensors(&oneWirePin);

#define FIREBASE_HOST "nodemcu-2a4e2.firebaseio.com"
#define FIREBASE_AUTH "bwDLCK226BGhiyxk5priRzKB6TbCYGH8iofQUkdd"
//#define WIFI_SSID "Sibiya"
//#define WIFI_PASSWORD "Sifiso989@@"
#define WIFI_SSID "CBD Res - The Foundation"
#define WIFI_PASSWORD "smart12345"


double i = 0;
double a = millis();
double c ;

int on_off = 0;  // geyser status received from firebase
int autoOn = 0;
int emergencyButton = 0;

 double Ttime2;
                                                             // for external led
void setup() {
   //Setup the LEDS to act as outputs
 // pinMode(redLedPin,OUTPUT);
  //pinMode(greenLedPin,OUTPUT);
  pinMode(yellowLedPin,OUTPUT);
  
  
  sensors.begin();
  Serial.begin(9600);
  delay(1000);

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);                                      //try to connect with wifi
  Serial.print("Connecting to ");
  Serial.print(WIFI_SSID);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println();
  Serial.print("Connected to ");
  Serial.println(WIFI_SSID);
  Serial.print("IP Address is : ");
  Serial.println(WiFi.localIP());                  //print local IP address
  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);    // connect to firebase
  
  Firebase.setInt("ON", 0);
  Firebase.setInt("AUTO_ON", 0);
  Firebase.setInt("Emergency", 0);
  Firebase.setInt("USERTEMP", 0);
  Firebase.setInt("POWER", 0);
  

  
}

void loop() 
{
  Firebase.setFloat("Temp",temperature );
  //NORMAL ON AND OFF
  on_off = Firebase.getInt("ON"); 
  higherLimit = Firebase.getInt("Temp");
  userTemperature = Firebase.getInt("USERTEMP");
  price2 = Firebase.getInt("Price");
  
  
 
  
  
  //AUTO ON AND OFF BASED ON ANDROID ALAR
  autoOn = Firebase.getInt("AUTO_ON");
  emergencyButton = Firebase.getInt("Emergency");
  Ttime2 = Firebase.getInt("Time");
  
   
  sensors.requestTemperatures();
  temperature = sensors.getTempCByIndex(0);

  if(emergencyButton != 1)
  {
    if(temperature <userTemperature   && on_off == 1)
    {
       Firebase.setInt("ON", 1);
      do{  
        Serial.println( userTemperature);
        
        Serial.println("Geyser ON");
        Ttime2 = Firebase.getInt("Time");
        Serial.print("Time: ");
         c = millis()/60000;
         i = (c - a) / 1000;
       
          Serial.println(c);
        
         Serial.println("......");
 
       //update firebase with the previous logedd time and the current time
         Firebase.setFloat("Time",Ttime2+ c); 
         delay(1000);
         digitalWrite(yellowLedPin, HIGH);
         Serial.println(userTemperature);
         Serial.println(higherLimit);
         
         }
      while( temperature != userTemperature && on_off  != 1);  
     
    }
    else if(temperature <=userTemperature   && autoOn == 1)
    {
       Firebase.setInt("ON", 1);
      do{  
        Serial.println( userTemperature);
        
        Serial.println("Geyser set to Auto-ON");
        Ttime2 = Firebase.getInt("Time");
        Serial.print("Time: ");
         c = millis()/1000;
         i = (c - a) / 1000;
         Serial.println(c);
         Serial.println("......");
 
       //update firebase with the previous logedd time and the current time
         Firebase.setFloat("Time",Ttime2+ c); 
          delay(1000);
         digitalWrite(yellowLedPin, HIGH);
          Serial.println(userTemperature);
           Serial.println(higherLimit);
         
         }
      while( temperature != userTemperature  && autoOn  != 1);  
     
    }else
    {
       digitalWrite(yellowLedPin, LOW);
      }
   
    
  } 
    else if(emergencyButton == 1)
    {
      Firebase.setInt("ON", 0);
      digitalWrite(yellowLedPin, LOW);
      Serial.println("OFF DUE TO EMERGENCY");
    }

     int current = 0;
  int maxCurrent = 0;
  int minCurrent = 1000;
  for (int i=0 ; i<=200 ; i++)  //Monitors and logs the current input for 200 cycles to determine max and min current
  {
    current = analogRead(currentPin);    //Reads current input and records maximum and minimum current
    if(current >= maxCurrent)
      maxCurrent = current;
    else if(current <= minCurrent)
      minCurrent = current;
  }
  if (maxCurrent <= 542)
  {
    maxCurrent = 541;
  }
  double RMSCurrent = ((maxCurrent - 541)*0.707)/11.8337;    //Calculates RMS current based on maximum value
  int RMSPower = 220*RMSCurrent;    //Calculates RMS Power Assuming Voltage 220VAC, change to 110VAC accordingly
  if (RMSPower > peakPower)
  {
    peakPower = RMSPower;
  }
  kilos = kilos + (RMSPower * (2.05/60/60/1000));    //Calculate kilowatt hours used
  delay (2000);

  //Serial.println(current);
  //Serial.print("..................");
  Serial.print(RMSCurrent);
  Serial.println("A");
  Serial.print(RMSPower);
  Serial.println("W");
  Serial.print(kilos);
  Serial.println("kWh");
  Serial.print("R");
  Serial.println(kilos*price);
  Firebase.setFloat("POWER",kilos);

   Firebase.setFloat("PRICE", (kilos*price)+price2);

  //Serial.print(peakPower);
  //Serial.println("W");

  
 } 
